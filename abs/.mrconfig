[DEFAULT]
include = 
        mrcommonpath="$(dirname "$MR_CONFIG")/../mrcommon"
        cat "$(realpath "$mrcommonpath")"

lib = 
        syncserver="rsync.archlinux.org"
        ##
        # rsync an abs repo or package to current directory
        ##
        rsync_abs() {
            repo="$1"
            arch="x86_64"
            rsargs='-mrtv --no-motd --delete-after --no-p --no-o --no-g'
            rsync $rsargs "$syncserver"::abs/{$arch,any}/$repo/ . || true
        }
        ## 
        # checkout an abs repo
        ##
        checkout_abs() {
            repo="$1"
            mkdir -p "$repo"
            cd "$repo"
            rsync_abs "$repo"
        }
        
update =
        reponame=$(basename $MR_REPO)
        if [ "$MR_REPO" == "$PWD" ]; then
            rsync_abs "$syncserver" "$reponame"
        else     
            pkgname=$(basename "$PWD")
            rsync_abs "$syncserver" "$reponame/$pkgname"
        fi

[core]
checkout = checkout_abs core

[community]
checkout = checkout_abs community

[extra]
checkout = checkout_abs extra

[testing]
checkout = checkout_abs testing

[haskell-core]
checkout = git clone 'https://github.com/archhaskell/habs.git' 'haskell-core'

sync = 
        cd "$MR_REPO"
        cblrepo sync

update =
        if [ "$MR_REPO" == "$PWD" ]; then
            cblrepo sync
            cblrepo pkgbuild $(cblrepo build base|tail -n +2)
        else     
            pkgname=$(basename "$PWD")
            cd "$MR_REPO"
            cblrepo pkgbuild $pkgname           
        fi
